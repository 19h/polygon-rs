/* 
 * Polygon API
 *
 * The future of fintech.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
#![allow(unused_imports)]

use serde_json::Value;
use bigdecimal::BigDecimal;
use chrono::{NaiveDateTime, DateTime, FixedOffset, Utc};

use crate::models::*;
//use crate::date_serializer;
//use crate::datetime_serializer;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Forex {
  #[serde(rename = "a")]
  a: f32,  // 0.80392 
  #[serde(rename = "b")]
  b: f32,  // 0.80392 
  #[serde(rename = "t")]
  t: i64  // 1517529600225 
}

impl Forex {
  pub fn new(a: f32, b: f32, t: i64, ) -> Forex {
    Forex {
      a: a,
      b: b,
      t: t
    }
  }

  pub fn set_a(&mut self, a: f32) {
    self.a = a;
  }

  pub fn with_a(mut self, a: f32) -> Forex {
    self.a = a;
    self
  }

  pub fn a(&self) -> &f32 {
    &self.a
  }


  pub fn set_b(&mut self, b: f32) {
    self.b = b;
  }

  pub fn with_b(mut self, b: f32) -> Forex {
    self.b = b;
    self
  }

  pub fn b(&self) -> &f32 {
    &self.b
  }


  pub fn set_t(&mut self, t: i64) {
    self.t = t;
  }

  pub fn with_t(mut self, t: i64) -> Forex {
    self.t = t;
    self
  }

  pub fn t(&self) -> &i64 {
    &self.t
  }


}


