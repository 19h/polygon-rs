/* 
 * Polygon API
 *
 * The future of fintech.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
#![allow(unused_imports)]

use serde_json::Value;
use bigdecimal::BigDecimal;
use chrono::{NaiveDateTime, DateTime, FixedOffset, Utc};

use crate::models::*;
//use crate::date_serializer;
//use crate::datetime_serializer;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct InlineResponse2003Results {
  #[serde(rename = "locale")]
  locale: Option<String>,  // US, GB, CA 
  #[serde(rename = "name")]
  name: Option<String>  // United States, Great Britain / UK, Canada 
}

impl InlineResponse2003Results {
  pub fn new() -> InlineResponse2003Results {
    InlineResponse2003Results {
      locale: None,
      name: None
    }
  }

  pub fn set_locale(&mut self, locale: String) {
    self.locale = Some(locale);
  }

  pub fn with_locale(mut self, locale: String) -> InlineResponse2003Results {
    self.locale = Some(locale);
    self
  }

  pub fn locale(&self) -> Option<&String> {
    self.locale.as_ref()
  }

  pub fn reset_locale(&mut self) {
    self.locale = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> InlineResponse2003Results {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

}


