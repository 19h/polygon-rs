/* 
 * Polygon API
 *
 * The future of fintech.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
#![allow(unused_imports)]

use serde_json::Value;
use bigdecimal::BigDecimal;
use chrono::{NaiveDateTime, DateTime, FixedOffset, Utc};

use crate::models::*;
//use crate::date_serializer;
//use crate::datetime_serializer;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct ForexSnapshotAgg {
  #[serde(rename = "c")]
  c: f32,  // 0.2907 
  #[serde(rename = "h")]
  h: f32,  // 0.2947 
  #[serde(rename = "l")]
  l: f32,  // 0.2901 
  #[serde(rename = "o")]
  o: f32,  // 0.2905 
  #[serde(rename = "v")]
  v: f32  // 1432.2907 
}

impl ForexSnapshotAgg {
  pub fn new(c: f32, h: f32, l: f32, o: f32, v: f32, ) -> ForexSnapshotAgg {
    ForexSnapshotAgg {
      c: c,
      h: h,
      l: l,
      o: o,
      v: v
    }
  }

  pub fn set_c(&mut self, c: f32) {
    self.c = c;
  }

  pub fn with_c(mut self, c: f32) -> ForexSnapshotAgg {
    self.c = c;
    self
  }

  pub fn c(&self) -> &f32 {
    &self.c
  }


  pub fn set_h(&mut self, h: f32) {
    self.h = h;
  }

  pub fn with_h(mut self, h: f32) -> ForexSnapshotAgg {
    self.h = h;
    self
  }

  pub fn h(&self) -> &f32 {
    &self.h
  }


  pub fn set_l(&mut self, l: f32) {
    self.l = l;
  }

  pub fn with_l(mut self, l: f32) -> ForexSnapshotAgg {
    self.l = l;
    self
  }

  pub fn l(&self) -> &f32 {
    &self.l
  }


  pub fn set_o(&mut self, o: f32) {
    self.o = o;
  }

  pub fn with_o(mut self, o: f32) -> ForexSnapshotAgg {
    self.o = o;
    self
  }

  pub fn o(&self) -> &f32 {
    &self.o
  }


  pub fn set_v(&mut self, v: f32) {
    self.v = v;
  }

  pub fn with_v(mut self, v: f32) -> ForexSnapshotAgg {
    self.v = v;
    self
  }

  pub fn v(&self) -> &f32 {
    &self.v
  }


}


